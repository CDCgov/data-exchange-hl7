<ConformanceContext xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Jungyubw/NIST_healthcare_hl7_v2_profile_schema/master/Schema/NIST%20Validation%20Schema/ConformanceContext.xsd" UUID="58349b4f84ae8eb77392392e"><MetaData Name="LRI R3_APHL" OrgName="No Org Info" Version="No Version Info" Date="No Date Info" Status="Draft" /><Predicates><Datatype><ByID ID="CWE_03_APHL_NG_FRN-1"><Predicate ID="CP_2[1]_-1" Target="2[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_3[1]_-3" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_5[1]_-5" Target="5[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CWE-7" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.3(Name of Coding System) is not 'L'.][If the value of CWE.3(Name of Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.]</Description><Condition><FORALL><NOT><PlainText Path="3[1]" Text="L" IgnoreCase="false" /></NOT><NOT><Format Path="3[1]" Regex="99[A-Za-z0-9]{3}" /></NOT><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></FORALL></Condition></Predicate><Predicate ID="CWE-9" Target="9[1]" TrueUsage="R" FalseUsage="RE"><Description>[If CWE.1(Identifier) is not valued] AND [If CWE.4(Alternate Identifier) is not valued]</Description><Condition><AND><NOT><Presence Path="1[1]" /></NOT><NOT><Presence Path="4[1]" /></NOT></AND></Condition></Predicate><Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="EI_02"><Predicate ID="CP_2[1]_-18" Target="2[1]" TrueUsage="R" FalseUsage="O"><Description>If EI.3(Universal ID) is not valued</Description><Condition><NOT><Presence Path="3[1]" /></NOT></Condition></Predicate><Predicate ID="CP_3[1]_-19" Target="3[1]" TrueUsage="R" FalseUsage="O"><Description>If EI.2(Namespace ID) is not valued</Description><Condition><NOT><Presence Path="2[1]" /></NOT></Condition></Predicate><Predicate ID="CP_4[1]_-20" Target="4[1]" TrueUsage="R" FalseUsage="X"><Description>If EI.3(Universal ID) is valued</Description><Condition><Presence Path="3[1]" /></Condition></Predicate></ByID><ByID ID="CWE_03"><Predicate ID="CP_2[1]_-1" Target="2[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_3[1]_-3" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_5[1]_-5" Target="5[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CWE-7" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.3(Name of Coding System) is not 'L'.][If the value of CWE.3(Name of Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.]</Description><Condition><FORALL><NOT><PlainText Path="3[1]" Text="L" IgnoreCase="false" /></NOT><NOT><Format Path="3[1]" Regex="99[A-Za-z0-9]{3}" /></NOT><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></FORALL></Condition></Predicate><Predicate ID="CWE-9" Target="9[1]" TrueUsage="R" FalseUsage="RE"><Description>[If CWE.1(Identifier) is not valued] AND [If CWE.4(Alternate Identifier) is not valued]</Description><Condition><AND><NOT><Presence Path="1[1]" /></NOT><NOT><Presence Path="4[1]" /></NOT></AND></Condition></Predicate><Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="CWE_04"><Predicate ID="CP_2[1]_-1" Target="2[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_3[1]_-3" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_5[1]_-5" Target="5[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CWE-7" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.3(Name of Coding System) is not 'L'.][If the value of CWE.3(Name of Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.]</Description><Condition><FORALL><NOT><PlainText Path="3[1]" Text="L" IgnoreCase="false" /></NOT><NOT><Format Path="3[1]" Regex="99[A-Za-z0-9]{3}" /></NOT><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></FORALL></Condition></Predicate><Predicate ID="CWE-9" Target="9[1]" TrueUsage="R" FalseUsage="RE"><Description>[If CWE.1(Identifier) is not valued] AND [If CWE.4(Alternate Identifier) is not valued]</Description><Condition><AND><NOT><Presence Path="1[1]" /></NOT><NOT><Presence Path="4[1]" /></NOT></AND></Condition></Predicate><Predicate ID="undefined-8" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.6 (Name of Alternate Coding System) is not 'L'.][If the value of CWE.6 (Name of Alternate Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.6 (Name of Alternate Coding System) is not formatted with 'HL7[0-9]{4}''.]</Description><Condition><FORALL><NOT><AND><Presence Path="6[1]" /><PlainText Path="6[1]" Text="L" IgnoreCase="false" /></AND></NOT><NOT><AND><Presence Path="6[1]" /><Format Path="6[1]" Regex="99[A-Za-z0-9]{3}" /></AND></NOT><NOT><AND><Presence Path="6[1]" /><Format Path="6[1]" Regex="HL7[0-9]{4}'" /></AND></NOT></FORALL></Condition></Predicate></ByID><ByID ID="XCN_02_A28883"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A77686"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A95771_A89531"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A74490_A55856"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A28883_A87845"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XON_02"><Predicate ID="CP_6[1]_-27" Target="6[1]" TrueUsage="RE" FalseUsage="X"><Description>If XON.10(Organization Identifier) is valued</Description><Condition><Presence Path="10[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-28" Target="7[1]" TrueUsage="R" FalseUsage="X"><Description>If XON.10(Organization Identifier) is valued</Description><Condition><Presence Path="10[1]" /></Condition></Predicate><Predicate ID="CP_10[1]_-29" Target="10[1]" TrueUsage="R" FalseUsage="RE"><Description>If XON.1(Organization Name) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate></ByID><ByID ID="EIP_GU"><Predicate ID="CP_2[1]_-21" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If EIP.1(Placer Assigned Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate></ByID><ByID ID="CWE_CR1"><Predicate ID="CP_6[1]_-12" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-17" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></Condition></Predicate></ByID><ByID ID="CWE_03_APHL"><Predicate ID="CP_2[1]_-1" Target="2[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_3[1]_-3" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_5[1]_-5" Target="5[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CWE-7" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.3(Name of Coding System) is not 'L'.][If the value of CWE.3(Name of Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.]</Description><Condition><FORALL><NOT><PlainText Path="3[1]" Text="L" IgnoreCase="false" /></NOT><NOT><Format Path="3[1]" Regex="99[A-Za-z0-9]{3}" /></NOT><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></FORALL></Condition></Predicate><Predicate ID="CWE-9" Target="9[1]" TrueUsage="R" FalseUsage="RE"><Description>[If CWE.1(Identifier) is not valued] AND [If CWE.4(Alternate Identifier) is not valued]</Description><Condition><AND><NOT><Presence Path="1[1]" /></NOT><NOT><Presence Path="4[1]" /></NOT></AND></Condition></Predicate><Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="XCN_02_A26018"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="CWE_CRE"><Predicate ID="CP_2[1]_-1" Target="2[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_3[1]_-3" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_4[1]_-4" Target="4[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_5[1]_-5" Target="5[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CWE-7" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.3(Name of Coding System) is not 'L'.][If the value of CWE.3(Name of Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.]</Description><Condition><FORALL><NOT><PlainText Path="3[1]" Text="L" IgnoreCase="false" /></NOT><NOT><Format Path="3[1]" Regex="99[A-Za-z0-9]{3}" /></NOT><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></FORALL></Condition></Predicate><Predicate ID="CP_9[1]_-10" Target="9[1]" TrueUsage="R" FalseUsage="RE"><Description>If CWE.1(Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate></ByID><ByID ID="XON_GU"><Predicate ID="CP_6[1]_-27" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If XON.10(Organization Identifier) is valued</Description><Condition><Presence Path="10[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-28" Target="7[1]" TrueUsage="R" FalseUsage="X"><Description>If XON.10(Organization Identifier) is valued</Description><Condition><Presence Path="10[1]" /></Condition></Predicate><Predicate ID="CP_10[1]_-29" Target="10[1]" TrueUsage="R" FalseUsage="RE"><Description>If XON.1(Organization Name) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate></ByID><ByID ID="CWE_01_APHL_NG_FRN-1_A91306_A11097"><Predicate ID="CP_6[1]_-12" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-17" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></Condition></Predicate><Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3 (Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><AND><Presence Path="3[1]" /><Format Path="3[1]" Regex="HL7[0-9]{4}" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A95771"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A1478_A8016"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="CWE_04_APHL"><Predicate ID="CP_2[1]_-1" Target="2[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_3[1]_-3" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_5[1]_-5" Target="5[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CWE-7" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.3(Name of Coding System) is not 'L'.][If the value of CWE.3(Name of Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.]</Description><Condition><FORALL><NOT><PlainText Path="3[1]" Text="L" IgnoreCase="false" /></NOT><NOT><Format Path="3[1]" Regex="99[A-Za-z0-9]{3}" /></NOT><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></FORALL></Condition></Predicate><Predicate ID="CWE-9" Target="9[1]" TrueUsage="R" FalseUsage="RE"><Description>[If CWE.1(Identifier) is not valued] AND [If CWE.4(Alternate Identifier) is not valued]</Description><Condition><AND><NOT><Presence Path="1[1]" /></NOT><NOT><Presence Path="4[1]" /></NOT></AND></Condition></Predicate><Predicate ID="undefined-8" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.6 (Name of Alternate Coding System) is not 'L'.][If the value of CWE.6 (Name of Alternate Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.6 (Name of Alternate Coding System) is not formatted with 'HL7[0-9]{4}''.]</Description><Condition><FORALL><NOT><AND><Presence Path="6[1]" /><PlainText Path="6[1]" Text="L" IgnoreCase="false" /></AND></NOT><NOT><AND><Presence Path="6[1]" /><Format Path="6[1]" Regex="99[A-Za-z0-9]{3}" /></AND></NOT><NOT><AND><Presence Path="6[1]" /><Format Path="6[1]" Regex="HL7[0-9]{4}'" /></AND></NOT></FORALL></Condition></Predicate></ByID><ByID ID="CWE_01_APHL_NG_FRN-1"><Predicate ID="CP_6[1]_-12" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-17" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></Condition></Predicate><Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3 (Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><AND><Presence Path="3[1]" /><Format Path="3[1]" Regex="HL7[0-9]{4}" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XPN_03_A81470"><Predicate ID="CP_1[1]_0" Target="1[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate></ByID><ByID ID="CWE_02_APHL"><Predicate ID="CP_6[1]_-12" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-17" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></Condition></Predicate><Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3 (Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><AND><Presence Path="3[1]" /><Format Path="3[1]" Regex="HL7[0-9]{4}" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A26018_A43379"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="HD_02"><Predicate ID="CP_1[1]_-22" Target="1[1]" TrueUsage="R" FalseUsage="O"><Description>If HD.2(Universal ID) is not valued</Description><Condition><NOT><Presence Path="2[1]" /></NOT></Condition></Predicate><Predicate ID="CP_2[1]_-23" Target="2[1]" TrueUsage="R" FalseUsage="O"><Description>If HD.1(Namespace ID) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate><Predicate ID="CP_3[1]_-24" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If HD.2(Universal ID) is valued</Description><Condition><Presence Path="2[1]" /></Condition></Predicate></ByID><ByID ID="XCN_GU"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate></ByID><ByID ID="XCN_02_A20855"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="EIP_NG"><Predicate ID="CP_2[1]_-21" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If EIP.1(Placer Assigned Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate></ByID><ByID ID="CWE_02"><Predicate ID="CP_6[1]_-12" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-17" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></Condition></Predicate><Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3 (Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><AND><Presence Path="3[1]" /><Format Path="3[1]" Regex="HL7[0-9]{4}" /></AND></NOT></Condition></Predicate></ByID><ByID ID="CWE_CR"><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CWE-7" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.3(Name of Coding System) is not 'L'.][If the value of CWE.3(Name of Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.]</Description><Condition><FORALL><NOT><PlainText Path="3[1]" Text="L" IgnoreCase="false" /></NOT><NOT><Format Path="3[1]" Regex="99[A-Za-z0-9]{3}" /></NOT><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></FORALL></Condition></Predicate></ByID><ByID ID="CWE_01"><Predicate ID="CP_6[1]_-12" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-17" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></Condition></Predicate><Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3 (Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><AND><Presence Path="3[1]" /><Format Path="3[1]" Regex="HL7[0-9]{4}" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A20855_A67352"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="CWE_OBX5"><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate></ByID><ByID ID="XCN_02"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A77686_A85763"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XON_02_A48168"><Predicate ID="CP_6[1]_-27" Target="6[1]" TrueUsage="RE" FalseUsage="X"><Description>If XON.10(Organization Identifier) is valued</Description><Condition><Presence Path="10[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-28" Target="7[1]" TrueUsage="R" FalseUsage="X"><Description>If XON.10(Organization Identifier) is valued</Description><Condition><Presence Path="10[1]" /></Condition></Predicate><Predicate ID="CP_10[1]_-29" Target="10[1]" TrueUsage="R" FalseUsage="RE"><Description>If XON.1(Organization Name) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A74490"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XPN_03_A28801"><Predicate ID="CP_1[1]_0" Target="1[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XPN_03_A6962"><Predicate ID="CP_1[1]_0" Target="1[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XCN_02_A1478"><Predicate ID="CP_9[1]_-25" Target="9[1]" TrueUsage="RE" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_13[1]_-26" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1(ID Number) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="RE"><Description>If XCN.1 (ID Number) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate></ByID><ByID ID="CWE_CRE1"><Predicate ID="CP_2[1]_-1" Target="2[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_3[1]_-3" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.1(Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_5[1]_-5" Target="5[1]" TrueUsage="RE" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_6[1]_-6" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CWE-7" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>FORALL[If the value of CWE.3(Name of Coding System) is not 'L'.][If the value of CWE.3(Name of Coding System) is not formatted with '99[A-Za-z0-9]{3}'.][If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.]</Description><Condition><FORALL><NOT><PlainText Path="3[1]" Text="L" IgnoreCase="false" /></NOT><NOT><Format Path="3[1]" Regex="99[A-Za-z0-9]{3}" /></NOT><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></FORALL></Condition></Predicate><Predicate ID="CWE-9" Target="9[1]" TrueUsage="R" FalseUsage="RE"><Description>[If CWE.1(Identifier) is not valued] AND [If CWE.4(Alternate Identifier) is not valued]</Description><Condition><AND><NOT><Presence Path="1[1]" /></NOT><NOT><Presence Path="4[1]" /></NOT></AND></Condition></Predicate></ByID><ByID ID="XPN_03"><Predicate ID="CP_1[1]_0" Target="1[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate><Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of XPN.7 (Name Type Code) is not 'U'.</Description><Condition><NOT><AND><Presence Path="7[1]" /><PlainText Path="7[1]" Text="U" IgnoreCase="false" /></AND></NOT></Condition></Predicate></ByID><ByID ID="XON_02_A56274"><Predicate ID="CP_6[1]_-27" Target="6[1]" TrueUsage="RE" FalseUsage="X"><Description>If XON.10(Organization Identifier) is valued</Description><Condition><Presence Path="10[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-28" Target="7[1]" TrueUsage="R" FalseUsage="X"><Description>If XON.10(Organization Identifier) is valued</Description><Condition><Presence Path="10[1]" /></Condition></Predicate><Predicate ID="CP_10[1]_-29" Target="10[1]" TrueUsage="R" FalseUsage="RE"><Description>If XON.1(Organization Name) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate></ByID><ByID ID="CWE_01_APHL"><Predicate ID="CP_6[1]_-12" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-17" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></Condition></Predicate><Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3 (Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><AND><Presence Path="3[1]" /><Format Path="3[1]" Regex="HL7[0-9]{4}" /></AND></NOT></Condition></Predicate></ByID><ByID ID="CWE_01_APHL_NG_FRN-1_A91306"><Predicate ID="CP_6[1]_-12" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4(Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_7[1]_-17" Target="7[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3(Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><Format Path="3[1]" Regex="HL7[0-9]{4}" /></NOT></Condition></Predicate><Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of CWE.3 (Name of Coding System) is not formatted with 'HL7[0-9]{4}'.</Description><Condition><NOT><AND><Presence Path="3[1]" /><Format Path="3[1]" Regex="HL7[0-9]{4}" /></AND></NOT></Condition></Predicate></ByID></Datatype><Segment><ByID ID="OBX_ORU_2-8-1"><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X"><Description>If OBX-5[*] is valued</Description><Condition><Presence Path="5[*]" /></Condition></Predicate><Predicate ID="CP_23[1]_0" Target="23[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_24[1]_0" Target="24[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_25[1]_0" Target="25[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_19[1]_0" Target="19[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate></ByID><ByID ID="OBR_ORU_NG_FRN-1"><Predicate ID="CP_3[1]_0" Target="50[1]" TrueUsage="R" FalseUsage="X"><Description>If OBR-29 is valued</Description><Condition><Presence Path="29[1]" /></Condition></Predicate><Predicate ID="CP_29[1]_0" Target="29[1]" TrueUsage="R" FalseUsage="RE"><Description>If the value of OBR-11 is 'G'.</Description><Condition><AND><Presence Path="11[1]" /><PlainText Path="11[1]" Text="G" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_26[1]_0" Target="26[1]" TrueUsage="R" FalseUsage="RE"><Description>If the value of OBR-11 is 'G'.</Description><Condition><AND><Presence Path="11[1]" /><PlainText Path="11[1]" Text="G" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_28[1]_0" Target="28[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE_03.1 (Identifier) or CWE_03.4 (Alternate Identifier) of at least one occurrence of OBR-49 (Result Handling) is valued 'CC' or 'BCC'</Description><Condition><Plugin QualifiedClassName="gov.nist.hit.lri.plugin.cp.OBR_28" /></Condition></Predicate></ByID><ByID ID="ERR_LRI"><Predicate ID="CP_5[1]_0" Target="5[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of ERR-3.1 is '999'.</Description><Condition><AND><Presence Path="3[1].1[1]" /><PlainText Path="3[1].1[1]" Text="999" IgnoreCase="false" /></AND></Condition></Predicate></ByID><ByID ID="OBX_ORU_NG_FRN-1_A99252_2-8-1"><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X"><Description>If OBX-5[*] is valued</Description><Condition><Presence Path="5[*]" /></Condition></Predicate><Predicate ID="CP_23[1]_0" Target="23[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_24[1]_0" Target="24[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_25[1]_0" Target="25[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_19[1]_0" Target="19[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate></ByID><ByID ID="OBX_ORU_NG_FRN-1_2-8-1"><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X"><Description>If OBX-5[*] is valued</Description><Condition><Presence Path="5[*]" /></Condition></Predicate><Predicate ID="CP_23[1]_0" Target="23[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_24[1]_0" Target="24[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_25[1]_0" Target="25[1]" TrueUsage="RE" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_19[1]_0" Target="19[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBX-29 is 'RSLT'.</Description><Condition><AND><Presence Path="29[1]" /><PlainText Path="29[1]" Text="RSLT" IgnoreCase="false" /></AND></Condition></Predicate></ByID><ByID ID="OBR_ORU"><Predicate ID="CP_50[1]_0" Target="50[1]" TrueUsage="R" FalseUsage="X"><Description>If OBR-29 is valued</Description><Condition><AND><Presence Path="29[1]" /><Presence Path="29[1]" /></AND></Condition></Predicate><Predicate ID="CP_29[1]_0" Target="29[1]" TrueUsage="R" FalseUsage="RE"><Description>If the value of OBR-11 is 'G'.</Description><Condition><AND><Presence Path="11[1]" /><PlainText Path="11[1]" Text="G" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_26[1]_0" Target="26[1]" TrueUsage="R" FalseUsage="RE"><Description>If the value of OBR-11 is 'G'.</Description><Condition><AND><Presence Path="11[1]" /><PlainText Path="11[1]" Text="G" IgnoreCase="false" /></AND></Condition></Predicate><Predicate ID="CP_28[1]_0" Target="28[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE_03.1 (Identifier) or CWE_03.4 (Alternate Identifier) of at least one occurrence of OBR-49 (Result Handling) is valued 'CC' or 'BCC'</Description><Condition><Plugin QualifiedClassName="gov.nist.hit.lri.plugin.cp.OBR_28" /></Condition></Predicate></ByID></Segment><Group><ByID ID="647dda6dffc60e253e91988b"><Predicate ID="CP_NOT Assigned_0" Target="6[1]" TrueUsage="R" FalseUsage="O"><Description>If the value of OBR.25 (Result Status) is one of list values: A,C,F,P,M.</Description><Condition><StringList Path="2[1].25[1]" CSV="A,C,F,P,M" /></Condition></Predicate><Predicate ID="CP_NOT Assigned_0" Target="1[1].31[1]" TrueUsage="R" FalseUsage="X"><Description>If OBR.29 (Parent) is valued</Description><Condition><Presence Path="2[1].29[1]" /></Condition></Predicate></ByID></Group><Message /></Predicates><Constraints><Datatype><ByID ID="DTM_12"><Constraint ID="DTM_12_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_12_Month_USAGE(C)" Target="."><Description>Month usage is 'C'.True Usage is 'R'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><NOT><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Month_USAGE(C)" Target="."><Description>Month usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.True Usage is 'R'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><NOT><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID><ByID ID="DTM_12_2-8-1"><Constraint ID="DTM_12_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_12_Month_USAGE(C)" Target="."><Description>Month usage is 'C'.True Usage is 'R'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><NOT><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Month_USAGE(C)" Target="."><Description>Month usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.True Usage is 'R'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><NOT><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_12_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID><ByID ID="DTM_3"><Constraint ID="DTM_3_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYY[MM[DD[HH[MM[SS[.S[S[S[S]]]]]]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{4}|\d{6}|\d{8}|\d{10}|\d{12}|\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID><ByID ID="EI_GU"><Constraint ID="LRI-2" Target="3[1]"><Description>The value of EI.3(Universal ID) SHALL be formatted with 'ISO-compliant OID'.</Description><Assertion><Format Path="3[1]" Regex="[0-2](\.(0|[1-9][0-9]*))*" /></Assertion></Constraint><Constraint ID="EI_GU.4"><Description>EI.4 SHALL contain the constant value 'ISO' drawn from the code system 'HL70301'.</Description><Assertion><PlainText Path="4[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="DTM_10_2-8-1"><Constraint ID="DTM_10_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYYMMDDHHMMSS[.S[S[S[S]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID><ByID ID="DTM"><Constraint ID="DTM_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Month) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID><ByID ID="DTM_1"><Constraint ID="DTM_1_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYY[MM[DD[HH[MM[SS[.S[S[S[S]]]]]]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{4}|\d{6}|\d{8}|\d{10}|\d{12}|\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID><ByID ID="DTM_6"><Constraint ID="DTM_6_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYYMMDD[HH[MM[SS[.S[S[S[S]]]]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{8}|\d{10}|\d{12}|\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID><ByID ID="DTM_2-8-1"><Constraint ID="DTM_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Month) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID><ByID ID="HD_GU"><Constraint ID="LRI-4" Target="2[1]"><Description>The value of HD-2 (Universal ID) SHALL be formatted with 'ISO-compliant OID'.</Description><Assertion><Format Path="2[1]" Regex="[0-2](\.(0|[1-9][0-9]*))*" /></Assertion></Constraint><Constraint ID="HD_GU.3"><Description>HD.3 SHALL contain the constant value 'ISO' drawn from the code system 'HL70301'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="DTM_2"><Constraint ID="DTM_2_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYY[MM[DD[HH[MM[SS[.S[S[S[S]]]]]]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{4}|\d{6}|\d{8}|\d{10}|\d{12}|\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID><ByID ID="DTM_08_2-8-1"><Constraint ID="DTM_08_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYYMMDDHHMM[SS[.S[S[S[S]]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{12}|\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID><ByID ID="DTM_5"><Constraint ID="DTM_5_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYYMMDD[HH[MM[SS[.S[S[S[S]]]]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{8}|\d{10}|\d{12}|\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID><ByID ID="DTM_4"><Constraint ID="DTM_4_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_4_Month_USAGE(C)" Target="."><Description>Month usage is 'C'.True Usage is 'R'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><NOT><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_Month_USAGE(C)" Target="."><Description>Month usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.True Usage is 'R'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><NOT><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_4_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID><ByID ID="DTM_0"><Constraint ID="DTM_0_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_0_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Month) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_0_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_0_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_0_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_0_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_0_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_0_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_0_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID></Datatype><Segment><ByID ID="TQ1_ORU_NG_FRN-1"><Constraint ID="LRI-44"><Description>The value of TQ1-1 SHALL be '1'.</Description><Assertion><PlainText Path="1[1]" Text="1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="PID_ORU"><Constraint ID="LRI-20" Target="1[1]"><Description>The value of PID-1 (Set ID - PID) SHALL be '1'.</Description><Assertion><PlainText Path="1[1]" Text="1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="OBR_ORU_NG_FRN-1" /><ByID ID="SPM_ORU_NG_FRN-1"><Constraint ID="SPM_4"><Description>SPM-4 SHALL be a valid code for the ARLN program</Description><Assertion><Plugin QualifiedClassName="gov.nist.hit.elr.aphl.plugin.extra.ARLN_SPM4" /></Assertion></Constraint><Constraint ID="SPM_ORU_6383358"><Description>The value of SPM-4.3 SHALL be one of list values: NULLFL,PLR,SCT.</Description><Assertion><StringList Path="4[1].3[1]" CSV="NULLFL,PLR,SCT" /></Assertion></Constraint></ByID><ByID ID="TQ1_ORU"><Constraint ID="LRI-44"><Description>The value of TQ1-1 SHALL be '1'.</Description><Assertion><PlainText Path="1[1]" Text="1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="MSH_ORU"><Constraint ID="LRI-6" Target="1[1]"><Description>The value of MSH-1 (Field Separator) SHALL be '|'.</Description><Assertion><PlainText Path="1[1]" Text="|" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-73"><Description>The value of MSH-9.2 SHALL be 'R01'.</Description><Assertion><PlainText Path="9[1].2[1]" Text="R01" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-12"><Description>The value of MSH-21[*] SHALL be '2.16.840.1.113883.9.195.3.4'.</Description><Assertion><PlainText Path="21[*]" Text="2.16.840.1.113883.9.195.3.4" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-9"><Description>The value of MSH-12.1 SHALL be '2.5.1'.</Description><Assertion><PlainText Path="12[1].1[1]" Text="2.5.1" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-72"><Description>The value of MSH-9.1 SHALL be 'ORU'.</Description><Assertion><PlainText Path="9[1].1[1]" Text="ORU" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-8"><Description>The value of MSH-9.3 SHALL be 'ORU_R01'.</Description><Assertion><PlainText Path="9[1].3[1]" Text="ORU_R01" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="MSH_ORU-12.1"><Description>MSH-12.1 SHALL contain the constant value '2.5.1' drawn from the code system 'HL70104'.</Description><Assertion><PlainText Path="12[1].1[1]" Text="2.5.1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="PID_ORU_NG_FRN-1"><Constraint ID="LRI-20" Target="1[1]"><Description>The value of PID-1 (Set ID - PID) SHALL be '1'.</Description><Assertion><PlainText Path="1[1]" Text="1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="OBX_ORU_NG_FRN-1_A99252_2-8-1"><Constraint ID="ARLN_OBX"><Description>OBX-3, OBX-2 and OBX-5 SHALL be a valid combination for the ARLN program</Description><Assertion><Plugin QualifiedClassName="gov.nist.hit.elr.aphl.plugin.extra.ARLN_OBX" /></Assertion></Constraint></ByID><ByID ID="OBR_ORU" /><ByID ID="PID_PHA"><Constraint ID="LRI-20" Target="1[1]"><Description>The value of PID-1 (Set ID - PID) SHALL be '1'.</Description><Assertion><PlainText Path="1[1]" Text="1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="OBX_ORU_2-8-1"><Constraint ID="OBX_ORU_4749807"><Description>The value of OBX-3.3 SHALL be one of list values: LN,PLR.</Description><Assertion><StringList Path="3[1].3[1]" CSV="LN,PLR" /></Assertion></Constraint></ByID><ByID ID="MSH_ORU_NG_FRN-1"><Constraint ID="LRI-6" Target="1[1]"><Description>The value of MSH-1 (Field Separator) SHALL be '|'.</Description><Assertion><PlainText Path="1[1]" Text="|" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-73"><Description>The value of MSH-9.2 SHALL be 'R01'.</Description><Assertion><PlainText Path="9[1].2[1]" Text="R01" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-9"><Description>The value of MSH-12.1 SHALL be '2.5.1'.</Description><Assertion><PlainText Path="12[1].1[1]" Text="2.5.1" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-72"><Description>The value of MSH-9.1 SHALL be 'ORU'.</Description><Assertion><PlainText Path="9[1].1[1]" Text="ORU" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="LRI-8"><Description>The value of MSH-9.3 SHALL be 'ORU_R01'.</Description><Assertion><PlainText Path="9[1].3[1]" Text="ORU_R01" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="MSH-6"><Description>The value of MSH-6 SHALL be 'CDC.ARLN.CRECol^2.16.840.1.114222.4.1.219333^ISO'.</Description><Assertion><AND><AND><PlainText Path="6[1].1[1]" Text="CDC.ARLN.CRECol" IgnoreCase="false" /><PlainText Path="6[1].2[1]" Text="2.16.840.1.114222.4.1.219333" IgnoreCase="false" /></AND><PlainText Path="6[1].3[1]" Text="ISO" IgnoreCase="false" /></AND></Assertion></Constraint><Constraint ID="MSH_ORU_5601419"><Description>The value of MSH-21.1 SHALL be 'LRI_NG_FRN_Profile'.</Description><Assertion><PlainText Path="21[1].1[1]" Text="LRI_NG_FRN_Profile" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="MSH_ORU_5221364"><Description>The value of MSH-21.3 SHALL be '2.16.840.1.113883.9.195.3.4'.</Description><Assertion><PlainText Path="21[1].3[1]" Text="2.16.840.1.113883.9.195.3.4" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="MSH_ORU_5144371"><Description>The value of MSH-21.4 SHALL be 'ISO'.</Description><Assertion><PlainText Path="21[1].4[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="MSH_ORU_NG_FRN-1-12.1"><Description>MSH-12.1 SHALL contain the constant value '2.5.1' drawn from the code system 'HL70104'.</Description><Assertion><PlainText Path="12[1].1[1]" Text="2.5.1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="OBX_ORU_NG_FRN-1_2-8-1"><Constraint ID="ARLN_OBX"><Description>OBX-3, OBX-2 and OBX-5 SHALL be a valid combination for the ARLN program</Description><Assertion><Plugin QualifiedClassName="gov.nist.hit.elr.aphl.plugin.extra.ARLN_OBX" /></Assertion></Constraint></ByID></Segment><Group><ByID ID="647dda6dffc60e253e919884"><Constraint ID="LRI-46"><Description>The value of OBX.1 (Set ID - OBX) SHALL be valued sequentially starting with the value '1'.</Description><Assertion><SetID Path="1[1].1[1]" /></Assertion></Constraint></ByID><ByID ID="647dda6dffc60e253e91988b"><Constraint ID="LRI-23"><Description>The value of ORC.2 (Placer Order Number) is equal to the value of OBR.2 (Placer Order Number).</Description><Assertion><PathValue Path1="1[1].2[1]" Operator="EQ" Path2="2[1].2[1]" /></Assertion></Constraint><Constraint ID="LRI-24"><Description>The value of ORC.3 (Filler Order Number) is equal to the value of OBR.3 (Filler Order Number).</Description><Assertion><PathValue Path1="1[1].3[1]" Operator="EQ" Path2="2[1].3[1]" /></Assertion></Constraint><Constraint ID="LRI-25"><Description>The value of ORC.12 (Ordering Provider) is equal to the value of OBR.16 (Ordering Provider).</Description><Assertion><PathValue Path1="1[1].12[1]" Operator="EQ" Path2="2[1].16[1]" /></Assertion></Constraint><Constraint ID="LRI-26"><Description>The value of ORC.31 (Parent Universal Service Identifier) is equal to the value of OBR.50 (Parent Universal Service Identifier).</Description><Assertion><PathValue Path1="1[1].31[1]" Operator="EQ" Path2="2[1].50[1]" /></Assertion></Constraint><Constraint ID="LRI-41"><Description>The value of OBR.50 (Parent Universal Service Identifier) SHALL be equal to the value of ORC.31 (Parent Universal Service Identifier).</Description><Assertion><PathValue Path1="2[1].50[1]" Operator="EQ" Path2="1[1].31[1]" /></Assertion></Constraint></ByID><ByID ID="647dda6dffc60e253e91988a"><Constraint ID="LRI-50"><Description>The value of SPM.1 (Set ID - SPM) SHALL be valued sequentially starting with the value '1'.</Description><Assertion><SetID Path="1[1].1[1]" /></Assertion></Constraint></ByID></Group><Message><ByID ID="5e1f729eaa8ab86be9bf639d" /></Message></Constraints></ConformanceContext>