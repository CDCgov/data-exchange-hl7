<ConformanceContext xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Jungyubw/NIST_healthcare_hl7_v2_profile_schema/master/Schema/NIST%20Validation%20Schema/ConformanceContext.xsd" UUID="5e8e23b016408b128ab2196c"><MetaData Name="COVID-19-v2.3" OrgName="No Org Info" Version="No Version Info" Date="No Date Info" Status="Draft" /><Predicates><Datatype><ByID ID="XCN_ELR"><Predicate ID="CP_13[1]_0" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If XCN.1 (ID number (ST)) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate><Predicate ID="CP_9[1]_0" Target="9[1]" TrueUsage="RE" FalseUsage="O"><Description>If XCN.1 (ID number (ST)) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="HD_ELR_var"><Predicate ID="CP_1[1]_0" Target="1[1]" TrueUsage="R" FalseUsage="O"><Description>If HD.2 (universal ID) is not valued</Description><Condition><NOT><AND><Presence Path="2[1]" /><Presence Path="2[1]" /></AND></NOT></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="O"><Description>If HD.1 (namespace ID) is not valued</Description><Condition><NOT><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If HD.2 (universal ID) is valued</Description><Condition><AND><Presence Path="2[1]" /><Presence Path="2[1]" /></AND></Condition></Predicate></ByID></Datatype><Segment /><Group /><Message /></Predicates><Constraints><Datatype><ByID ID="DTM_SS_2-5-1"><Constraint ID="DTM_SS_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYYMMDDHHMMSS[.S[S[S[S]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID><ByID ID="DTM_2-5-1"><Constraint ID="DTM_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Month) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID><ByID ID="DTM_DD_0000_2-5-1"><Constraint ID="DTM_DD_0000_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_DD_0000_Month_USAGE(C)" Target="."><Description>Month usage is 'C'.True Usage is 'R'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><NOT><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_Month_USAGE(C)" Target="."><Description>Month usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.True Usage is 'R'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><NOT><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If Year(Year) is not literal value '0000'.'.</Description><Assertion><IMPLY><AND><Format Path="." Regex="0000(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></AND><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_DD_0000_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID><ByID ID="DTM_MM_2-5-1"><Constraint ID="DTM_MM_DateTimeConstraint" Target="."><Description>Element 'xxx' SHALL follow the Date/Time pattern 'YYYYMMDDHHMM[SS[.S[S[S[S]]]]][+/-ZZZZ]'.</Description><Assertion><Format Path="." Regex="^(\d{12}|\d{14}|\d{14}\.\d|\d{14}\.\d{2}|\d{14}\.\d{3}|\d{14}\.\d{4})([+-]\d{4})?$" /></Assertion></Constraint></ByID></Datatype><Segment><ByID ID="NTE_ELR"><Constraint ID="ELR-053"><Description>The value of NTE-1 SHALL be valued sequentially starting with the value '1'.</Description><Assertion><SetID Path="1[1]" /></Assertion></Constraint></ByID><ByID ID="MSH_ELR_v2.3.z-1"><Constraint ID="ELR-015"><Description>The value of MSH-9.1 SHALL be 'ORU'.</Description><Assertion><PlainText Path="9[1].1[1]" Text="ORU" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="ELR-016"><Description>The value of MSH-9.2 SHALL be 'R01'.</Description><Assertion><PlainText Path="9[1].2[1]" Text="R01" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="ELR-012"><Description>The value of MSH-1 SHALL be '|'.</Description><Assertion><PlainText Path="1[1]" Text="|" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="MSH_ELR"><Constraint ID="ELR-015"><Description>The value of MSH-9.1 SHALL be 'ORU'.</Description><Assertion><PlainText Path="9[1].1[1]" Text="ORU" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="ELR-016"><Description>The value of MSH-9.2 SHALL be 'R01'.</Description><Assertion><PlainText Path="9[1].2[1]" Text="R01" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="ELR-012"><Description>The value of MSH-1 SHALL be '|'.</Description><Assertion><PlainText Path="1[1]" Text="|" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="PID_ELR"><Constraint ID="ELR-024"><Description>The value of PID-1 SHALL be '1'.</Description><Assertion><PlainText Path="1[1]" Text="1" IgnoreCase="false" /></Assertion></Constraint></ByID></Segment><Group /><Message /></Constraints></ConformanceContext>