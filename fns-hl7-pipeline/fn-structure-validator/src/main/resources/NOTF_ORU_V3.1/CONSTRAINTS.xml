<ConformanceContext xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Jungyubw/NIST_healthcare_hl7_v2_profile_schema/master/Schema/NIST%20Validation%20Schema/ConformanceContext.xsd" UUID="59132db084ae09a5bc52bad9"><MetaData Name="PHIN Spec 3.1" OrgName="CDC" Version="No Version Info" Date="No Date Info" Status="Draft" /><Predicates><Datatype><ByID ID="CE_PH"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate></ByID><ByID ID="CE_M"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="X" FalseUsage="RE"><Description>If CE.1 (Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="CE_M_A36245"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="X" FalseUsage="RE"><Description>If CE.1 (Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="CE_M_A33593_A14410"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="X" FalseUsage="RE"><Description>If CE.1 (Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="CE_PH_A66645_A18731"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate></ByID><ByID ID="CE_M_A80977_A28878"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="X" FalseUsage="RE"><Description>If CE.1 (Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="CWE_M"><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.1 (Identifier) is valued</Description><Condition><Presence Path="1[1]" /></Condition></Predicate><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CWE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate></ByID><ByID ID="CE_M_A33593"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="X" FalseUsage="RE"><Description>If CE.1 (Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="CE_PH_A66645"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate></ByID><ByID ID="CE_M_A80977"><Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.4 (Alternate Identifier) is valued</Description><Condition><Presence Path="4[1]" /></Condition></Predicate><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="X" FalseUsage="RE"><Description>If CE.1 (Identifier) is not valued</Description><Condition><NOT><Presence Path="1[1]" /></NOT></Condition></Predicate><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X"><Description>If CE.1 (Identifier) is valued</Description><Condition><AND><Presence Path="1[1]" /><Presence Path="1[1]" /></AND></Condition></Predicate></ByID><ByID ID="SN_M"><Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="RE" FalseUsage="X"><Description>If SN.2 (Num1) is valued</Description><Condition><AND><Presence Path="2[1]" /><Presence Path="2[1]" /></AND></Condition></Predicate><Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="RE" FalseUsage="X"><Description>If SN.2 (Num1) is valued</Description><Condition><AND><Presence Path="2[1]" /><Presence Path="2[1]" /></AND></Condition></Predicate></ByID></Datatype><Segment><ByID ID="SPM_M"><Predicate ID="CP_13[1]_0" Target="13[1]" TrueUsage="R" FalseUsage="X"><Description>If the value of SPM-11[*] (Specimen Role) is 'G'.</Description><Condition><PlainText Path="11[*]" Text="G" IgnoreCase="true" /></Condition></Predicate></ByID><ByID ID="OBR_M"><Predicate ID="undefined-31" Target="31[1]" TrueUsage="R" FalseUsage="RE"><Description>[If the value of OBR-1 is equal to 1.] AND [If the value of OBR-4.1 is '68991-1'.]</Description><Condition><AND><AND><Presence Path="1[1]" /><SimpleValue Path="1[1]" Operator="EQ" Value="1" /></AND><AND><Presence Path="4[1].1[1]" /><PlainText Path="4[1].1[1]" Text="68991-1" IgnoreCase="false" /></AND></AND></Condition></Predicate></ByID><ByID ID="OBX_M"><Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X"><Description>If the value of OBX-11 is not 'X'.</Description><Condition><NOT><PlainText Path="11[1]" Text="X" IgnoreCase="true" /></NOT></Condition></Predicate></ByID></Segment><Group /><Message /></Predicates><Constraints><Datatype><ByID ID="HD_M_A71268"><Constraint ID="001"><Description>HD-2 (Universal ID) SHALL be valued.</Description><Assertion><Presence Path="2[1]" /></Assertion></Constraint><Constraint ID="002"><Description>The value of HD-3 (Universal ID Type) SHALL be 'ISO'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="HD_M_A6729"><Constraint ID="001"><Description>HD-2 (Universal ID) SHALL be valued.</Description><Assertion><Presence Path="2[1]" /></Assertion></Constraint><Constraint ID="002"><Description>The value of HD-3 (Universal ID Type) SHALL be 'ISO'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="HD_M_A28254"><Constraint ID="001"><Description>HD-2 (Universal ID) SHALL be valued.</Description><Assertion><Presence Path="2[1]" /></Assertion></Constraint><Constraint ID="002"><Description>The value of HD-3 (Universal ID Type) SHALL be 'ISO'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="HD_M_A56310"><Constraint ID="001"><Description>HD-2 (Universal ID) SHALL be valued.</Description><Assertion><Presence Path="2[1]" /></Assertion></Constraint><Constraint ID="002"><Description>The value of HD-3 (Universal ID Type) SHALL be 'ISO'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="DTM_M"><Constraint ID="DTM_M_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_M_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Month) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_M_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_M_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_M_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_M_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_M_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_M_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_M_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID><ByID ID="HD_M"><Constraint ID="001"><Description>HD-2 (Universal ID) SHALL be valued.</Description><Assertion><Presence Path="2[1]" /></Assertion></Constraint><Constraint ID="002"><Description>The value of HD-3 (Universal ID Type) SHALL be 'ISO'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="HD_M_A69491"><Constraint ID="001"><Description>HD-2 (Universal ID) SHALL be valued.</Description><Assertion><Presence Path="2[1]" /></Assertion></Constraint><Constraint ID="002"><Description>The value of HD-3 (Universal ID Type) SHALL be 'ISO'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="HD_M_A12865"><Constraint ID="001"><Description>HD-2 (Universal ID) SHALL be valued.</Description><Assertion><Presence Path="2[1]" /></Assertion></Constraint><Constraint ID="002"><Description>The value of HD-3 (Universal ID Type) SHALL be 'ISO'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="HD_M_A81954"><Constraint ID="001"><Description>HD-2 (Universal ID) SHALL be valued.</Description><Assertion><Presence Path="2[1]" /></Assertion></Constraint><Constraint ID="002"><Description>The value of HD-3 (Universal ID Type) SHALL be 'ISO'.</Description><Assertion><PlainText Path="3[1]" Text="ISO" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="DTM"><Constraint ID="DTM_Year_USAGE(R)" Target="."><Description>Year usage is 'R'.</Description><Assertion><Format Path="." Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?" /></Assertion></Constraint><Constraint ID="DTM_Day_USAGE(C)" Target="."><Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Month) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Hour_USAGE(C)" Target="."><Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Minute_USAGE(C)" Target="."><Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_Second_USAGE(C)" Target="."><Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/10 second_USAGE(C)" Target="."><Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/100 second_USAGE(C)" Target="."><Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/1000 second_USAGE(C)" Target="."><Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint><Constraint ID="DTM_1/10000 second_USAGE(C)" Target="."><Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is valued.'.</Description><Assertion><IMPLY><NOT><Format Path="." Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?" /></NOT><Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?" /></IMPLY></Assertion></Constraint></ByID></Datatype><Segment><ByID ID="NK1_M"><Constraint ID="NK1_NMI NK1_8360257"><Description>The value of NK1-1 (Set ID - NK1) SHALL be valued sequentially starting with the value '1'.</Description><Assertion><SetID Path="1[1]" /></Assertion></Constraint></ByID><ByID ID="MSH_M"><Constraint ID="004"><Description>The value of MSH-1 SHALL be '|'.</Description><Assertion><PlainText Path="1[1]" Text="|" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="005"><Description>The value of MSH-2 SHALL be '^~\&amp;amp;'.</Description><Assertion><PlainText Path="2[1]" Text="^~\&amp;" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="007"><Description>The value of MSH-9 SHALL be 'ORU^R01^ORU_R01'.</Description><Assertion><AND><AND><PlainText Path="9[1].1[1]" Text="ORU" IgnoreCase="false" /><PlainText Path="9[1].2[1]" Text="R01" IgnoreCase="false" /></AND><PlainText Path="9[1].3[1]" Text="ORU_R01" IgnoreCase="false" /></AND></Assertion></Constraint><Constraint ID="006-2"><Description>The value of MSH-7.1 SHALL be formatted with '^((\d{2}){2,7}|\d{14}.\d{1,4}([+-]\d{4})?)$'.</Description><Assertion><Format Path="7[1].1[1]" Regex="^((\d{2}){2,7}|\d{14}.\d{1,4}([+-]\d{4})?)$" /></Assertion></Constraint><Constraint ID="008"><Description>The value of MSH-12.1 SHALL be '2.5.1'.</Description><Assertion><PlainText Path="12[1].1[1]" Text="2.5.1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="MSH_M_A92495"><Constraint ID="004"><Description>The value of MSH-1 SHALL be '|'.</Description><Assertion><PlainText Path="1[1]" Text="|" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="005"><Description>The value of MSH-2 SHALL be '^~\&amp;amp;'.</Description><Assertion><PlainText Path="2[1]" Text="^~\&amp;" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="007"><Description>The value of MSH-9 SHALL be 'ORU^R01^ORU_R01'.</Description><Assertion><AND><AND><PlainText Path="9[1].1[1]" Text="ORU" IgnoreCase="false" /><PlainText Path="9[1].2[1]" Text="R01" IgnoreCase="false" /></AND><PlainText Path="9[1].3[1]" Text="ORU_R01" IgnoreCase="false" /></AND></Assertion></Constraint><Constraint ID="006-2"><Description>The value of MSH-7.1 SHALL be formatted with '^((\d{2}){2,7}|\d{14}.\d{1,4}([+-]\d{4})?)$'.</Description><Assertion><Format Path="7[1].1[1]" Regex="^((\d{2}){2,7}|\d{14}.\d{1,4}([+-]\d{4})?)$" /></Assertion></Constraint><Constraint ID="008"><Description>The value of MSH-12.1 SHALL be '2.5.1'.</Description><Assertion><PlainText Path="12[1].1[1]" Text="2.5.1" IgnoreCase="false" /></Assertion></Constraint></ByID><ByID ID="PID_M"><Constraint ID="011"><Description>The value of PID-1 (Set ID - PID) SHALL be '1'.</Description><Assertion><PlainText Path="1[1]" Text="1" IgnoreCase="false" /></Assertion></Constraint><Constraint ID="012"><Description>IF [[PID-5[*].1 (Family Name) is not valued.] AND [PID-5[*].2 (Given Name) SHALL NOT be valued.]] THEN [The value of PID-5[*].7 (Name Type Code) SHALL be 'S'.]</Description><Assertion><IMPLY><AND><NOT><Presence Path="5[*].1[1]" /></NOT><NOT><Presence Path="5[*].2[1]" /></NOT></AND><PlainText Path="5[*].7[1]" Text="S" IgnoreCase="false" /></IMPLY></Assertion></Constraint></ByID><ByID ID="OBR_M"><Constraint ID="014"><Description>IF [The value of OBR-1 is equal to 1.] THEN [The value of OBR-4.1 is '68991-9'.]</Description><Assertion><IMPLY><SimpleValue Path="1[1]" Operator="EQ" Value="1" /><PlainText Path="4[1].1[1]" Text="68991-9" IgnoreCase="false" /></IMPLY></Assertion></Constraint><Constraint ID="019"><Description>IF [The value of OBR-4.1 is '68991-9'.] THEN [The value of OBR-25 is one of list values: F,C,X.]</Description><Assertion><IMPLY><PlainText Path="4[1].1[1]" Text="68991-9" IgnoreCase="false" /><StringList Path="25[1]" CSV="F,C,X" /></IMPLY></Assertion></Constraint><Constraint ID="17-1"><Description>The value of OBR-7.1 SHALL be formatted with '^\d{4}(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2]\d)|(3[0-1]))((([01]\d|2[0-3])([0-5]\d))(([0-5]\d)((\.\d{1,4}))?)?)?)?)?([+-](([0]\d|1[0-3])([0-5]\d)))?$'.</Description><Assertion><Format Path="7[1].1[1]" Regex="^\d{4}(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2]\d)|(3[0-1]))((([01]\d|2[0-3])([0-5]\d))(([0-5]\d)((\.\d{1,4}))?)?)?)?)?([+-](([0]\d|1[0-3])([0-5]\d)))?$" /></Assertion></Constraint></ByID></Segment><Group /><Message><ByID ID="5f1895849f0a5f904c3d9142"><Constraint ID="1.1"><Description>PhinSpec.1.1(Field Separator) SHALL contain the constant value '|'.</Description><Assertion><PlainText Path="1[1].1[1]" Text="|" IgnoreCase="false" /></Assertion></Constraint></ByID></Message></Constraints></ConformanceContext>