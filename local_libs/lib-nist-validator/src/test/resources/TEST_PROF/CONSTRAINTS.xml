<?xml version="1.0"?>
<ConformanceContext xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Jungyubw/NIST_healthcare_hl7_v2_profile_schema/master/Schema/NIST%20Validation%20Schema/ConformanceContext.xsd"
                    UUID="57450d0dd4c6f57e694d1e88">
    <MetaData Name="Main IG-APHL" OrgName="APHL" Version="No Version Info" Date="No Date Info"/>
    <Predicates>
        <Datatype>
            <ByID ID="CWE_ELR_ARLN">
                <Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If CWE.1 (Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="1[1]"/>
                            <Presence Path="1[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If CWE.1 (Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="1[1]"/>
                            <Presence Path="1[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_5[1]_0" Target="5[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If CWE.4 (Alternate Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="4[1]"/>
                            <Presence Path="4[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If CWE.4 (Alternate Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="4[1]"/>
                            <Presence Path="4[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="undefined-9" Target="9[1]" TrueUsage="R" FalseUsage="RE">
                    <Description>[If CWE.1 (Identifier) is not valued] AND [If CWE.4 (Alternate Identifier) is not
                        valued]
                    </Description>
                    <Condition>
                        <AND>
                            <NOT>
                                <AND>
                                    <Presence Path="1[1]"/>
                                    <Presence Path="1[1]"/>
                                </AND>
                            </NOT>
                            <NOT>
                                <AND>
                                    <Presence Path="4[1]"/>
                                    <Presence Path="4[1]"/>
                                </AND>
                            </NOT>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="CWE_OBX5">
                <Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If CWE.4 (Alternate Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="4[1]"/>
                            <Presence Path="4[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="XCN_ELR">
                <Predicate ID="CP_9[1]_0" Target="9[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If XCN.1 (ID Number) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="1[1]"/>
                            <Presence Path="1[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_13[1]_0" Target="13[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If XCN.1 (ID Number) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="1[1]"/>
                            <Presence Path="1[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="CWE_ELR">
                <Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If CWE.1 (Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="1[1]"/>
                            <Presence Path="1[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_3[1]_0" Target="3[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If CWE.1 (Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="1[1]"/>
                            <Presence Path="1[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_5[1]_0" Target="5[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If CWE.4 (Alternate Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="4[1]"/>
                            <Presence Path="4[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If CWE.4 (Alternate Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="4[1]"/>
                            <Presence Path="4[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="undefined-9" Target="9[1]" TrueUsage="R" FalseUsage="RE">
                    <Description>[If CWE.1 (Identifier) is not valued] AND [If CWE.4 (Alternate Identifier) is not
                        valued]
                    </Description>
                    <Condition>
                        <AND>
                            <NOT>
                                <AND>
                                    <Presence Path="1[1]"/>
                                    <Presence Path="1[1]"/>
                                </AND>
                            </NOT>
                            <NOT>
                                <AND>
                                    <Presence Path="4[1]"/>
                                    <Presence Path="4[1]"/>
                                </AND>
                            </NOT>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="XTN_ELR">
                <Predicate ID="CP_5[1]_0" Target="5[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If XTN.7 (Local Number) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="7[1]"/>
                            <Presence Path="7[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If XTN.7 (Local Number) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="7[1]"/>
                            <Presence Path="7[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_7[1]_0" Target="7[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If XTN.4 (Email Address) is not valued</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="4[1]"/>
                                <Presence Path="4[1]"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If XTN.7 (Local Number) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="7[1]"/>
                            <Presence Path="7[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_4[1]_0" Target="4[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If XTN.7 (Local Number) is not valued</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="7[1]"/>
                                <Presence Path="7[1]"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="CNN_ELR">
                <Predicate ID="CP_10[1]_0" Target="10[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If CNN.1 (ID Number) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="1[1]"/>
                            <Presence Path="1[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_11[1]_0" Target="11[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If CNN.10 (Assigning Authority - Universal ID) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="10[1]"/>
                            <Presence Path="10[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="XON_ELR">
                <Predicate ID="CP_1[1]_0" Target="1[1]" TrueUsage="R" FalseUsage="RE">
                    <Description>If XON.10 (Organization Identifier) is not valued</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="10[1]"/>
                                <Presence Path="10[1]"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_6[1]_0" Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If XON.10 (Organization Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="10[1]"/>
                            <Presence Path="10[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_7[1]_0" Target="7[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If XON.10 (Organization Identifier) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="10[1]"/>
                            <Presence Path="10[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
        </Datatype>
        <Segment>
            <ByID ID="PID_ELR_ARLN-1">
                <Predicate ID="CP_34[1]_0" Target="34[1]" TrueUsage="R" FalseUsage="O">
                    <Description>If PID-33 is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="33[1]"/>
                            <Presence Path="33[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="PID_ELR-ARLN">
                <Predicate ID="CP_34[1]_0" Target="34[1]" TrueUsage="R" FalseUsage="O">
                    <Description>If PID-33 is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="33[1]"/>
                            <Presence Path="33[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="MSH_ELR">
                <Predicate ID="CP_15[1]_0" Target="15[1]" TrueUsage="R" FalseUsage="RE">
                    <Description>If the first component (Entity Identifier) of one occurrence of MSH-21 (Message Profile
                        Identifier) is 'PHLabReport-Ack'
                    </Description>
                    <Condition>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cp.MSH_15"/>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_16[1]_0" Target="16[1]" TrueUsage="R" FalseUsage="RE">
                    <Description>If the first component (Entity Identifier) of one occurrence of MSH-21 (Message Profile
                        Identifier) is 'PHLabReport-Ack'
                    </Description>
                    <Condition>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cp.MSH_16"/>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="OBX_ELR_ARLN-2">
                <Predicate ID="CP_5[1]_0" Target="5[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If the value of OBX-11 is not 'X'.</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="11[1]"/>
                                <PlainText Path="11[1]" Text="X" IgnoreCase="false"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="undefined-6" Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>[[If the value of OBX-2 is 'NM'.] OR [If the value of OBX-2 is 'SN'.]] AND [If the
                        value of OBX-11 is not 'X'.]
                    </Description>
                    <Condition>
                        <AND>
                            <OR>
                                <AND>
                                    <Presence Path="2[1]"/>
                                    <PlainText Path="2[1]" Text="NM" IgnoreCase="false"/>
                                </AND>
                                <AND>
                                    <Presence Path="2[1]"/>
                                    <PlainText Path="2[1]" Text="SN" IgnoreCase="true"/>
                                </AND>
                            </OR>
                            <NOT>
                                <AND>
                                    <Presence Path="11[1]"/>
                                    <PlainText Path="11[1]" Text="X" IgnoreCase="true"/>
                                </AND>
                            </NOT>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If the value of OBX-11 is not 'X'.</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="11[1]"/>
                                <PlainText Path="11[1]" Text="X" IgnoreCase="true"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If OBX-5 is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="5[1]"/>
                            <Presence Path="5[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="PID_ELR">
                <Predicate ID="CP_34[1]_0" Target="34[1]" TrueUsage="R" FalseUsage="O">
                    <Description>If PID-33 is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="33[1]"/>
                            <Presence Path="33[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="NK1_ELR">
                <Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If NK1-13[*] is not valued</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="13[*]"/>
                                <Presence Path="13[*]"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_30[1]_0" Target="30[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If NK1-13[*] is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="13[*]"/>
                            <Presence Path="13[*]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_13[1]_0" Target="13[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If NK1-2[*] is not valued</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="2[*]"/>
                                <Presence Path="2[*]"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="OBX_ELR_ARLN-1">
                <Predicate ID="CP_5[1]_0" Target="5[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If the value of OBX-11 is not 'X'.</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="11[1]"/>
                                <PlainText Path="11[1]" Text="X" IgnoreCase="false"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="undefined-6" Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>[[If the value of OBX-2 is 'NM'.] OR [If the value of OBX-2 is 'SN'.]] AND [If the
                        value of OBX-11 is not 'X'.]
                    </Description>
                    <Condition>
                        <AND>
                            <OR>
                                <AND>
                                    <Presence Path="2[1]"/>
                                    <PlainText Path="2[1]" Text="NM" IgnoreCase="false"/>
                                </AND>
                                <AND>
                                    <Presence Path="2[1]"/>
                                    <PlainText Path="2[1]" Text="SN" IgnoreCase="true"/>
                                </AND>
                            </OR>
                            <NOT>
                                <AND>
                                    <Presence Path="11[1]"/>
                                    <PlainText Path="11[1]" Text="X" IgnoreCase="true"/>
                                </AND>
                            </NOT>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If the value of OBX-11 is not 'X'.</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="11[1]"/>
                                <PlainText Path="11[1]" Text="X" IgnoreCase="true"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If OBX-5 is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="5[1]"/>
                            <Presence Path="5[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="OBX_ELR">
                <Predicate ID="CP_5[1]_0" Target="5[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If the value of OBX-11 is not 'X'.</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="11[1]"/>
                                <PlainText Path="11[1]" Text="X" IgnoreCase="false"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="undefined-6" Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>[[If the value of OBX-2 is 'NM'.] OR [If the value of OBX-2 is 'SN'.]] AND [If the
                        value of OBX-11 is not 'X'.]
                    </Description>
                    <Condition>
                        <AND>
                            <OR>
                                <AND>
                                    <Presence Path="2[1]"/>
                                    <PlainText Path="2[1]" Text="NM" IgnoreCase="false"/>
                                </AND>
                                <AND>
                                    <Presence Path="2[1]"/>
                                    <PlainText Path="2[1]" Text="SN" IgnoreCase="true"/>
                                </AND>
                            </OR>
                            <NOT>
                                <AND>
                                    <Presence Path="11[1]"/>
                                    <PlainText Path="11[1]" Text="X" IgnoreCase="true"/>
                                </AND>
                            </NOT>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If the value of OBX-11 is not 'X'.</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="11[1]"/>
                                <PlainText Path="11[1]" Text="X" IgnoreCase="true"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If OBX-5 is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="5[1]"/>
                            <Presence Path="5[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="MSH_ELR_ARLN-1">
                <Predicate ID="CP_15[1]_0" Target="15[1]" TrueUsage="R" FalseUsage="RE">
                    <Description>If the first component (Entity Identifier) of one occurrence of MSH-21 (Message Profile
                        Identifier) is 'PHLabReport-Ack'
                    </Description>
                    <Condition>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cp.MSH_15"/>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_16[1]_0" Target="16[1]" TrueUsage="R" FalseUsage="RE">
                    <Description>If the first component (Entity Identifier) of one occurrence of MSH-21 (Message Profile
                        Identifier) is 'PHLabReport-Ack'
                    </Description>
                    <Condition>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cp.MSH_16"/>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="OBX_ELR_ARLN-1_A15775">
                <Predicate ID="CP_5[1]_0" Target="5[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If the value of OBX-11 is not 'X'.</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="11[1]"/>
                                <PlainText Path="11[1]" Text="X" IgnoreCase="false"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="undefined-6" Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>[[If the value of OBX-2 is 'NM'.] OR [If the value of OBX-2 is 'SN'.]] AND [If the
                        value of OBX-11 is not 'X'.]
                    </Description>
                    <Condition>
                        <AND>
                            <OR>
                                <AND>
                                    <Presence Path="2[1]"/>
                                    <PlainText Path="2[1]" Text="NM" IgnoreCase="false"/>
                                </AND>
                                <AND>
                                    <Presence Path="2[1]"/>
                                    <PlainText Path="2[1]" Text="SN" IgnoreCase="true"/>
                                </AND>
                            </OR>
                            <NOT>
                                <AND>
                                    <Presence Path="11[1]"/>
                                    <PlainText Path="11[1]" Text="X" IgnoreCase="true"/>
                                </AND>
                            </NOT>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_8[1]_0" Target="8[1]" TrueUsage="RE" FalseUsage="X">
                    <Description>If the value of OBX-11 is not 'X'.</Description>
                    <Condition>
                        <NOT>
                            <AND>
                                <Presence Path="11[1]"/>
                                <PlainText Path="11[1]" Text="X" IgnoreCase="true"/>
                            </AND>
                        </NOT>
                    </Condition>
                </Predicate>
                <Predicate ID="CP_2[1]_0" Target="2[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If OBX-5 is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="5[1]"/>
                            <Presence Path="5[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
        </Segment>
        <Group>
            <ByID ID="5d7bf91a84ae59c6e0c89d4f">
                <Predicate ID="CP_NOT Assigned_0" Target="2[1].8[1]" TrueUsage="R" FalseUsage="O">
                    <Description>If SPECIMEN[*].SPM.17.2.1 (Time) is valued</Description>
                    <Condition>
                        <AND>
                            <Presence Path="9[*].1[1].17[1].2[1].1[1]"/>
                            <Presence Path="9[*].1[1].17[1].2[1].1[1]"/>
                        </AND>
                    </Condition>
                </Predicate>
                <Predicate Target="6[1]" TrueUsage="R" FalseUsage="RE">
                    <Description>[[If the value of OBR.25 (Result Status) is 'F'.] OR [If the value of OBR.25 (Result
                        Status) is 'P'.]] OR [[If the value of OBR.25 (Result Status) is 'R'.] OR [[If the value of
                        OBR.25 (Result Status) is 'A'.] OR [If the value of OBR.25 (Result Status) is 'C'.]]]
                    </Description>
                    <Condition>
                        <OR>
                            <OR>
                                <AND>
                                    <Presence Path="2[1].25[1]"/>
                                    <PlainText Path="2[1].25[1]" Text="F" IgnoreCase="false"/>
                                </AND>
                                <AND>
                                    <Presence Path="2[1].25[1]"/>
                                    <PlainText Path="2[1].25[1]" Text="P" IgnoreCase="false"/>
                                </AND>
                            </OR>
                            <OR>
                                <AND>
                                    <Presence Path="2[1].25[1]"/>
                                    <PlainText Path="2[1].25[1]" Text="R" IgnoreCase="false"/>
                                </AND>
                                <OR>
                                    <AND>
                                        <Presence Path="2[1].25[1]"/>
                                        <PlainText Path="2[1].25[1]" Text="A" IgnoreCase="false"/>
                                    </AND>
                                    <AND>
                                        <Presence Path="2[1].25[1]"/>
                                        <PlainText Path="2[1].25[1]" Text="C" IgnoreCase="false"/>
                                    </AND>
                                </OR>
                            </OR>
                        </OR>
                    </Condition>
                </Predicate>
            </ByID>
        </Group>
        <Message/>
    </Predicates>
    <Constraints>
        <Datatype>
            <ByID ID="CWE_ELR_ARLN">
                <Constraint ID="ELR-069">
                    <Description>IF [The value of CWE-3 (Name of Coding System) is 'LN'.] THEN [The value of CWE-1
                        (Identifier) SHALL be formatted with '^\d{2,5}[-]\d{1}$'.]
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <PlainText Path="3[1]" Text="LN" IgnoreCase="false"/>
                            <Format Path="1[1]" Regex="^\d{2,5}[-]\d{1}$"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-070">
                    <Description>IF [The value of CWE-6 (Name of Alternate Coding System) is 'LN'.] THEN [The value of
                        CWE-4 (Alternate Identifier) SHALL be formatted with '^\d{2,5}[-]\d{1}$'.]
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <PlainText Path="6[1]" Text="LN" IgnoreCase="false"/>
                            <Format Path="4[1]" Regex="^\d{2,5}[-]\d{1}$"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="CWE_ELR">
                <Constraint ID="ELR-069">
                    <Description>IF [The value of CWE-3 (Name of Coding System) is 'LN'.] THEN [The value of CWE-1
                        (Identifier) SHALL be formatted with '^\d{2,5}[-]\d{1}$'.]
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <PlainText Path="3[1]" Text="LN" IgnoreCase="false"/>
                            <Format Path="1[1]" Regex="^\d{2,5}[-]\d{1}$"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-070">
                    <Description>IF [The value of CWE-6 (Name of Alternate Coding System) is 'LN'.] THEN [The value of
                        CWE-4 (Alternate Identifier) SHALL be formatted with '^\d{2,5}[-]\d{1}$'.]
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <PlainText Path="6[1]" Text="LN" IgnoreCase="false"/>
                            <Format Path="4[1]" Regex="^\d{2,5}[-]\d{1}$"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="DTM_ELR">
                <Constraint ID="DTM_ELR_Year_USAGE(R)" Target=".">
                    <Description>Year usage is 'R'.</Description>
                    <Assertion>
                        <Format Path="."
                                Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_ELR_Day_USAGE(C)" Target=".">
                    <Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Month) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_ELR_Hour_USAGE(C)" Target=".">
                    <Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_ELR_Minute_USAGE(C)" Target=".">
                    <Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_ELR_Second_USAGE(C)" Target=".">
                    <Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_ELR_1/10 second_USAGE(C)" Target=".">
                    <Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_ELR_1/100 second_USAGE(C)" Target=".">
                    <Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is
                        valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_ELR_1/1000 second_USAGE(C)" Target=".">
                    <Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is
                        valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_ELR_1/10000 second_USAGE(C)" Target=".">
                    <Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is
                        valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9][0-9]((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="SN_ELR-08_09">
                <Constraint ID="ELR-009">
                    <Description>[The value of SN-3 (Separator/Suffix) SHALL be ':'.] OR [[[The value of SN-3
                        (Separator/Suffix) SHALL be '/'.] OR [The value of SN-3 (Separator/Suffix) SHALL be '.'.]] OR
                        [[The value of SN-3 (Separator/Suffix) SHALL be '-'.] OR [The value of SN-3 (Separator/Suffix)
                        SHALL be '+'.]]]
                    </Description>
                    <Assertion>
                        <OR>
                            <PlainText Path="3[1]" Text=":" IgnoreCase="false"/>
                            <OR>
                                <OR>
                                    <PlainText Path="3[1]" Text="/" IgnoreCase="false"/>
                                    <PlainText Path="3[1]" Text="." IgnoreCase="false"/>
                                </OR>
                                <OR>
                                    <PlainText Path="3[1]" Text="-" IgnoreCase="false"/>
                                    <PlainText Path="3[1]" Text="+" IgnoreCase="false"/>
                                </OR>
                            </OR>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-008">
                    <Description>EXIST[The value of SN-1 (Comparator) SHALL be '='.][The value of SN-1 (Comparator)
                        SHALL be '&amp;lt;'.][The value of SN-1 (Comparator) SHALL be '&amp;gt;'.][The value of SN-1
                        (Comparator) SHALL be '&amp;lt;&amp;gt;'.][The value of SN-1 (Comparator) SHALL be '&amp;lt;='.][The
                        value of SN-1 (Comparator) SHALL be '&amp;gt;='.]
                    </Description>
                    <Assertion>
                        <EXIST>
                            <PlainText Path="1[1]" Text="=" IgnoreCase="false"/>
                            <PlainText Path="1[1]" Text="&lt;" IgnoreCase="false"/>
                            <PlainText Path="1[1]" Text="&gt;" IgnoreCase="false"/>
                            <PlainText Path="1[1]" Text="&lt;&gt;" IgnoreCase="false"/>
                            <PlainText Path="1[1]" Text="&lt;=" IgnoreCase="false"/>
                            <PlainText Path="1[1]" Text="&gt;=" IgnoreCase="false"/>
                        </EXIST>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="XAD_ELR">
                <Constraint ID="ELR-010">
                    <Description>The value of XAD-4 (State or Province) SHALL be one of codes in ValueSet:
                        PHVS_State_FIPS_5-2_8121607.
                    </Description>
                    <Assertion>
                        <ValueSet Path="4[1]" ValueSetID="PHVS_State_FIPS_5-2_8121607" BindingStrength="R"
                                  BindingLocation="1"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-067">
                    <Description>The value of XAD-9 (County/Parish Code) SHALL be formatted with '^\d{5}$'.
                    </Description>
                    <Assertion>
                        <Format Path="9[1]" Regex="^\d{5}$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-011">
                    <Description>The value of XAD-5 (Zip or Postal Code) SHALL be formatted with
                        '^\d{5}$|^\d{5}-\d{4}$|^[A-Z]{1}\d{1}[A-Z]{1}\d{1}[A-Z]{1}\d{1}$'.
                    </Description>
                    <Assertion>
                        <Format Path="5[1]" Regex="^\d{5}$|^\d{5}-\d{4}$|^[A-Z]{1}\d{1}[A-Z]{1}\d{1}[A-Z]{1}\d{1}$"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="DTM">
                <Constraint ID="DTM_Year_USAGE(R)" Target=".">
                    <Description>Year usage is 'R'.</Description>
                    <Assertion>
                        <Format Path="."
                                Regex="([0-9]{4})(((0[1-9])|(1[0-2]))(((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?)?)?((\+|\-)[0-9]{4})?"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_Day_USAGE(C)" Target=".">
                    <Description>Day usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Month) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))((([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="." Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_Hour_USAGE(C)" Target=".">
                    <Description>Hour usage is 'C'.False Usage is 'X'. Predicate is 'If DD(Day) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))(([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_Minute_USAGE(C)" Target=".">
                    <Description>Minute usage is 'C'.False Usage is 'X'. Predicate is 'If HH(Hour) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])(([0-5][0-9])(\.[0-9]{1,4})?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_Second_USAGE(C)" Target=".">
                    <Description>Second usage is 'C'.False Usage is 'X'. Predicate is 'If MM(Minute) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])(\.[0-9]{1,4})?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_1/10 second_USAGE(C)" Target=".">
                    <Description>1/10 second usage is 'C'.False Usage is 'X'. Predicate is 'If SS(Second) is valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9]([0-9]([0-9]([0-9])?)?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_1/100 second_USAGE(C)" Target=".">
                    <Description>1/100 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/10 second) is
                        valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9]([0-9]([0-9])?)?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_1/1000 second_USAGE(C)" Target=".">
                    <Description>1/1000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/100 second) is
                        valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9]([0-9])?((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="DTM_1/10000 second_USAGE(C)" Target=".">
                    <Description>1/10000 second usage is 'C'.False Usage is 'X'. Predicate is 'If s(1/1000 second) is
                        valued.'.
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <NOT>
                                <Format Path="."
                                        Regex="([0-9]{4})((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))(([0-1][0-9])|(2[0-3]))([0-5][0-9])([0-5][0-9])\.[0-9][0-9][0-9][0-9]((\+|\-)[0-9]{4})?"/>
                            </NOT>
                            <Format Path="."
                                    Regex="([0-9]{4})?((0[1-9])|(1[0-2]))?((0[1-9])|([1-2][0-9])|(3[0-1]))?(([0-1][0-9])|(2[0-3]))?([0-5][0-9])?([0-5][0-9])?(\.[0-9])?([0-9])?([0-9])?((\+|\-)[0-9]{4})?"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="EIP_ELR">
                <Constraint ID="ELR-004">
                    <Description>The value of EIP-2.3 (Universal ID) SHALL be formatted with 'ISO-compliant OID'.
                    </Description>
                    <Assertion>
                        <Format Path="2[1].3[1]" Regex="[0-2](\.(0|[1-9][0-9]*))*"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-005">
                    <Description>The value of EIP-2.4 (Universal ID Type) SHALL be 'ISO'.</Description>
                    <Assertion>
                        <PlainText Path="2[1].4[1]" Text="ISO" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="CNN_ELR">
                <Constraint ID="ELR-002">
                    <Description>The value of CNN-10 (Assigning Authority - Universal ID) SHALL be formatted with
                        'ISO-compliant OID'.
                    </Description>
                    <Assertion>
                        <Format Path="10[1]" Regex="[0-2](\.(0|[1-9][0-9]*))*"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-003">
                    <Description>The value of CNN-11 (Assigning Authority - Universal ID Type) SHALL be 'ISO'.
                    </Description>
                    <Assertion>
                        <PlainText Path="11[1]" Text="ISO" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="HD_ELR">
                <Constraint ID="ELR-063">
                    <Description>IF [The value of HD-3 (Universal ID Type) is 'ISO'.] THEN [The value of HD-2 (Universal
                        ID) SHALL be formatted with 'ISO-compliant OID'.]
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <AND>
                                <Presence Path="3[1]"/>
                                <PlainText Path="3[1]" Text="ISO" IgnoreCase="false"/>
                            </AND>
                            <AND>
                                <Presence Path="2[1]"/>
                                <Format Path="2[1]" Regex="[0-2](\.(0|[1-9][0-9]*))*"/>
                            </AND>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-062">
                    <Description>IF [The value of HD-3 (Universal ID Type) is 'CLIA'.] THEN [The value of HD-2
                        (Universal ID) SHALL be formatted with '^\d{2}[D]{1}\d{7}$'.]
                    </Description>
                    <Assertion>
                        <IMPLY>
                            <AND>
                                <Presence Path="3[1]"/>
                                <PlainText Path="3[1]" Text="CLIA" IgnoreCase="false"/>
                            </AND>
                            <AND>
                                <Presence Path="2[1]"/>
                                <Format Path="2[1]" Regex="^\d{2}[D]{1}\d{7}$"/>
                            </AND>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-007">
                    <Description>[The value of HD-3 (Universal ID Type) SHALL be 'ISO'.] OR [The value of HD-3
                        (Universal ID Type) SHALL be 'CLIA'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <AND>
                                <Presence Path="3[1]"/>
                                <PlainText Path="3[1]" Text="ISO" IgnoreCase="false"/>
                            </AND>
                            <AND>
                                <Presence Path="3[1]"/>
                                <PlainText Path="3[1]" Text="CLIA" IgnoreCase="false"/>
                            </AND>
                        </OR>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="EI_ELR">
                <Constraint ID="ELR-005">
                    <Description>The value of EI-4 (Universal ID Type) SHALL be 'ISO'.</Description>
                    <Assertion>
                        <PlainText Path="4[1]" Text="ISO" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-004">
                    <Description>The value of EI-3 (Universal ID) SHALL be formatted with 'ISO-compliant OID'.
                    </Description>
                    <Assertion>
                        <Format Path="3[1]" Regex="[0-2](\.(0|[1-9][0-9]*))*"/>
                    </Assertion>
                </Constraint>
            </ByID>
        </Datatype>
        <Segment>
            <ByID ID="OBX_ELR_ARLN-1">
                <Constraint ID="ELR-049">
                    <Description>[The value of OBX-14.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.] OR [The value
                        of OBX-14.1 SHALL be '0000'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <Format Path="14[1].1[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                            <PlainText Path="14[1].1[1]" Text="0000" IgnoreCase="false"/>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-052">
                    <Description>The value of OBX-19.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="19[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ARLN_OBX">
                    <Description>OBX-3, OBX-2 and OBX-5 SHALL be a valid combination for the ARLN program</Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.aphl.plugin.extra.ARLN_OBX"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="PID_ELR-ARLN">
                <Constraint ID="ELR-026">
                    <Description>The value of PID-7.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="7[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-028">
                    <Description>The value of PID-29.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="29[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-029">
                    <Description>The value of PID-33.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="33[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-024">
                    <Description>The value of PID-1 SHALL be '1'.</Description>
                    <Assertion>
                        <PlainText Path="1[1]" Text="1" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="NTE_ELR">
                <Constraint ID="ELR-053">
                    <Description>The value of NTE-1 SHALL be valued sequentially starting with the value '1'.
                    </Description>
                    <Assertion>
                        <SetID Path="1[1]"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="OBX_ELR_ARLN-1_A15775">
                <Constraint ID="ELR-049">
                    <Description>[The value of OBX-14.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.] OR [The value
                        of OBX-14.1 SHALL be '0000'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <Format Path="14[1].1[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                            <PlainText Path="14[1].1[1]" Text="0000" IgnoreCase="false"/>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-052">
                    <Description>The value of OBX-19.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="19[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ARLN_OBX">
                    <Description>OBX-3, OBX-2 and OBX-5 SHALL be a valid combination for the ARLN program</Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.aphl.plugin.extra.ARLN_OBX"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="SFT_ELR">
                <Constraint ID="ELR-023">
                    <Description>The value of SFT-6.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="6[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="SPM_ELR">
                <Constraint ID="ELR-060">
                    <Description>The value of SPM-18.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="18[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-054">
                    <Description>The value of SPM-1 SHALL be '1'.</Description>
                    <Assertion>
                        <PlainText Path="1[1]" Text="1" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-055">
                    <Description>[The value of SPM-17.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.] OR [The value
                        of SPM-17.1 SHALL be '0000'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <Format Path="17[1].1[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                            <PlainText Path="17[1].1[1]" Text="0000" IgnoreCase="false"/>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-058">
                    <Description>[The value of SPM-17.2 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.] OR [The value
                        of SPM-17.2 SHALL be '0000'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <Format Path="17[1].2[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                            <PlainText Path="17[1].2[1]" Text="0000" IgnoreCase="false"/>
                        </OR>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="OBX_ELR">
                <Constraint ID="ELR-049">
                    <Description>[The value of OBX-14.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.] OR [The value
                        of OBX-14.1 SHALL be '0000'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <Format Path="14[1].1[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                            <PlainText Path="14[1].1[1]" Text="0000" IgnoreCase="false"/>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-052">
                    <Description>The value of OBX-19.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="19[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="PV1_ELR">
                <Constraint ID="ELR-030">
                    <Description>The value of PV1-1 SHALL be '1'.</Description>
                    <Assertion>
                        <AND>
                            <Presence Path="1[1]"/>
                            <PlainText Path="1[1]" Text="1" IgnoreCase="false"/>
                        </AND>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-031">
                    <Description>The value of PV1-44.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="44[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-032">
                    <Description>The value of PV1-45.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="45[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="MSH_ELR_ARLN-1">
                <Constraint ID="ELR-012">
                    <Description>The value of MSH-1 SHALL be '|'.</Description>
                    <Assertion>
                        <PlainText Path="1[1]" Text="|" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-014">
                    <Description>The value of MSH-7.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14})((\x2D|\x2B)\d{4})$'.
                    </Description>
                    <Assertion>
                        <Format Path="7[1].1[1]" Regex="^(\d{14}\.\d{1,4}|\d{14})((\x2D|\x2B)\d{4})$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-015">
                    <Description>The value of MSH-9.1 SHALL be 'ORU'.</Description>
                    <Assertion>
                        <PlainText Path="9[1].1[1]" Text="ORU" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-016">
                    <Description>The value of MSH-9.2 SHALL be 'R01'.</Description>
                    <Assertion>
                        <PlainText Path="9[1].2[1]" Text="R01" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-017">
                    <Description>The value of MSH-9.3 SHALL be 'ORU_R01'.</Description>
                    <Assertion>
                        <PlainText Path="9[1].3[1]" Text="ORU_R01" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-019">
                    <Description>MSH-15 (Accept Acknowledgment Type) SHALL contain the constant value 'AL' IF any
                        occurrence of MSH.21.1 (Entity Identifier) is 'PHLabReport-Ack', ELSE, if valued, SHALL contain
                        the constant value 'NE'
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_019"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-020">
                    <Description>MSH-16 (Application Acknowledgement Type) SHALL contain the constant value 'AL', 'NE',
                        'ER', or 'SU', IF any occurrence of MSH-21.1 (Entity Identifier) is 'PHLabReport-Ack', ELSE, if
                        valued, SHALL contain the constant value 'NE'
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_020"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-21.1">
                    <Description>MSH.21.1 (Entity Identifier) of an occurrence of MSH.21 (Message Profile Identifier)
                        SHALL be valued with 'PHLabReport-Ack' OR 'PHLabReport-NoAck' OR 'PHLabReport-Batch'
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_021"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-022">
                    <Description>MSH-21.3 (Universal ID) of an occurrence of MSH.21 (Message Profile Identifier) SHALL
                        contain the value "2.16.840.1.113883.9.11"
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_022"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="DHQP6">
                    <Description>The value of MSH-6 SHALL be 'ViralExDHQPDiagMicro^2.16.840.1.114222.4.1.213285^ISO'.
                    </Description>
                    <Assertion>
                        <AND>
                            <AND>
                                <PlainText Path="6[1].1[1]" Text="ViralExDHQPDiagMicro" IgnoreCase="false"/>
                                <PlainText Path="6[1].2[1]" Text="2.16.840.1.114222.4.1.213285" IgnoreCase="false"/>
                            </AND>
                            <PlainText Path="6[1].3[1]" Text="ISO" IgnoreCase="false"/>
                        </AND>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="OBR_ELR">
                <Constraint ID="ELR-041">
                    <Description>[The value of OBR-7.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$'.] OR [The value of OBR-7.1
                        SHALL be '0000'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <Format Path="7[1].1[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$"/>
                            <PlainText Path="7[1].1[1]" Text="0000" IgnoreCase="false"/>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-043">
                    <Description>[The value of OBR-8.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$'.] OR [The value of OBR-8.1
                        SHALL be '0000'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <Format Path="8[1].1[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$"/>
                            <PlainText Path="8[1].1[1]" Text="0000" IgnoreCase="false"/>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-047">
                    <Description>The value of OBR-22.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12})((\x2D|\x2B)\d{4})$'.
                    </Description>
                    <Assertion>
                        <Format Path="22[1].1[1]" Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12})((\x2D|\x2B)\d{4})$"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="SPM_ELR_ARLN-1">
                <Constraint ID="ELR-060">
                    <Description>The value of SPM-18.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="18[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-054">
                    <Description>The value of SPM-1 SHALL be '1'.</Description>
                    <Assertion>
                        <PlainText Path="1[1]" Text="1" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="SPM-4">
                    <Description>SPM-4 SHALL be a valid code for the ARLN program</Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.aphl.plugin.extra.ARLN_SPM4"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-055">
                    <Description>[The value of SPM-17.1 SHALL be '0000'.] OR [The value of SPM-17.1 SHALL be formatted
                        with '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <PlainText Path="17[1].1[1]" Text="0000" IgnoreCase="false"/>
                            <Format Path="17[1].1[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-058">
                    <Description>[The value of SPM-17.2 SHALL be '0000'.] OR [The value of SPM-17.2 SHALL be formatted
                        with '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <PlainText Path="17[1].2[1]" Text="0000" IgnoreCase="false"/>
                            <Format Path="17[1].2[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                        </OR>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="NK1_ELR">
                <Constraint ID="ELR-033">
                    <Description>The value of NK1-1 SHALL be valued sequentially starting with the value '1'.
                    </Description>
                    <Assertion>
                        <SetID Path="1[1]"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="PID_ELR">
                <Constraint ID="ELR-026">
                    <Description>The value of PID-7.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="7[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-028">
                    <Description>The value of PID-29.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="29[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-029">
                    <Description>The value of PID-33.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="33[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-024">
                    <Description>The value of PID-1 SHALL be '1'.</Description>
                    <Assertion>
                        <PlainText Path="1[1]" Text="1" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="MSH_ELR">
                <Constraint ID="ELR-012">
                    <Description>The value of MSH-1 SHALL be '|'.</Description>
                    <Assertion>
                        <PlainText Path="1[1]" Text="|" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-014">
                    <Description>The value of MSH-7.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14})((\x2D|\x2B)\d{4})$'.
                    </Description>
                    <Assertion>
                        <Format Path="7[1].1[1]" Regex="^(\d{14}\.\d{1,4}|\d{14})((\x2D|\x2B)\d{4})$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-015">
                    <Description>The value of MSH-9.1 SHALL be 'ORU'.</Description>
                    <Assertion>
                        <PlainText Path="9[1].1[1]" Text="ORU" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-016">
                    <Description>The value of MSH-9.2 SHALL be 'R01'.</Description>
                    <Assertion>
                        <PlainText Path="9[1].2[1]" Text="R01" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-017">
                    <Description>The value of MSH-9.3 SHALL be 'ORU_R01'.</Description>
                    <Assertion>
                        <PlainText Path="9[1].3[1]" Text="ORU_R01" IgnoreCase="true"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-019">
                    <Description>MSH-15 (Accept Acknowledgment Type) SHALL contain the constant value 'AL' IF any
                        occurrence of MSH.21.1 (Entity Identifier) is 'PHLabReport-Ack', ELSE, if valued, SHALL contain
                        the constant value 'NE'
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_019"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-020">
                    <Description>MSH-16 (Application Acknowledgement Type) SHALL contain the constant value 'AL', 'NE',
                        'ER', or 'SU', IF any occurrence of MSH-21.1 (Entity Identifier) is 'PHLabReport-Ack', ELSE, if
                        valued, SHALL contain the constant value 'NE'
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_020"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-21.1">
                    <Description>MSH.21.1 (Entity Identifier) of an occurrence of MSH.21 (Message Profile Identifier)
                        SHALL be valued with 'PHLabReport-Ack' OR 'PHLabReport-NoAck' OR 'PHLabReport-Batch'
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_021"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-022">
                    <Description>MSH-21.3 (Universal ID) of an occurrence of MSH.21 (Message Profile Identifier) SHALL
                        contain the value "2.16.840.1.113883.9.11"
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_022"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="OBX_ELR_ARLN-2">
                <Constraint ID="ELR-049">
                    <Description>[The value of OBX-14.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.] OR [The value
                        of OBX-14.1 SHALL be '0000'.]
                    </Description>
                    <Assertion>
                        <OR>
                            <Format Path="14[1].1[1]"
                                    Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                            <PlainText Path="14[1].1[1]" Text="0000" IgnoreCase="false"/>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-052">
                    <Description>The value of OBX-19.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="19[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="ORC_ELR1">
                <Constraint ID="ELR-034">
                    <Description>The value of ORC-1 SHALL be 'RE'.</Description>
                    <Assertion>
                        <PlainText Path="1[1]" Text="RE" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="PID_ELR_ARLN-1">
                <Constraint ID="ELR-026">
                    <Description>The value of PID-7.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="7[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-028">
                    <Description>The value of PID-29.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="29[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-029">
                    <Description>The value of PID-33.1 SHALL be formatted with
                        '^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$'.
                    </Description>
                    <Assertion>
                        <Format Path="33[1].1[1]"
                                Regex="^(\d{14}\.\d{1,4}|\d{14}|\d{12}|\d{10}|\d{8}|\d{6}|\d{4})((\x2D|\x2B)\d{4})?$"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-024">
                    <Description>The value of PID-1 SHALL be '1'.</Description>
                    <Assertion>
                        <PlainText Path="1[1]" Text="1" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
            </ByID>
        </Segment>
        <Group>
            <ByID ID="5d7bf91a84ae59c6e0c89d4f">
                <Constraint ID="ELR-039">
                    <Description>The value of OBR.1 (Set ID - OBR) SHALL be valued sequentially starting with the value
                        '1'.
                    </Description>
                    <Assertion>
                        <SetID Path="2[1].1[1]"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-037">
                    <Description>ORC-12 (Ordering Provider) SHALL be the same value as OBR-16 within same
                        Order_Observation Group
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_037"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-038">
                    <Description>ORC-14 (Call Back Phone Number) SHALL be the same value as OBR-17 within same
                        Order_Observation Group
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_038"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-051">
                    <Description>The value of OBSERVATION[*].OBX.14.1 (Time) SHALL be equal to the value of OBR.7.1
                        (Time).
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_051"/>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-035">
                    <Description>[FORALL[ORC.2.1 (Entity Identifier) SHALL NOT be valued.][ORC.2.2 (Namespace ID) SHALL
                        NOT be valued.][ORC.2.3 (Universal ID) SHALL NOT be valued.][ORC.2.4 (Universal ID Type) SHALL
                        NOT be valued.]] OR [FORALL[The value of ORC.2.1 (Entity Identifier) SHALL be equal to the value
                        of OBR.2.1 (Entity Identifier).][The value of ORC.2.2 (Namespace ID) SHALL be equal to the value
                        of OBR.2.2 (Namespace ID).][The value of ORC.2.3 (Universal ID) SHALL be equal to the value of
                        OBR.2.3 (Universal ID).][The value of ORC.2.4 (Universal ID Type) SHALL be equal to the value of
                        OBR.2.4 (Universal ID Type).]]
                    </Description>
                    <Assertion>
                        <OR>
                            <FORALL>
                                <NOT>
                                    <Presence Path="1[1].2[1].1[1]"/>
                                </NOT>
                                <NOT>
                                    <Presence Path="1[1].2[1].2[1]"/>
                                </NOT>
                                <NOT>
                                    <Presence Path="1[1].2[1].3[1]"/>
                                </NOT>
                                <NOT>
                                    <Presence Path="1[1].2[1].4[1]"/>
                                </NOT>
                            </FORALL>
                            <FORALL>
                                <PathValue Path1="1[1].2[1].1[1]" Operator="EQ" Path2="2[1].2[1].1[1]"/>
                                <PathValue Path1="1[1].2[1].2[1]" Operator="EQ" Path2="2[1].2[1].2[1]"/>
                                <PathValue Path1="1[1].2[1].3[1]" Operator="EQ" Path2="2[1].2[1].3[1]"/>
                                <PathValue Path1="1[1].2[1].4[1]" Operator="EQ" Path2="2[1].2[1].4[1]"/>
                            </FORALL>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="ELR-036">
                    <Description>[FORALL[ORC.3.1 (Entity Identifier) SHALL NOT be valued.][ORC.3.2 (Namespace ID) SHALL
                        NOT be valued.][ORC.3.3 (Universal ID) SHALL NOT be valued.][ORC.3.4 (Universal ID Type) SHALL
                        NOT be valued.]] OR [FORALL[The value of ORC.3.1 (Entity Identifier) SHALL be equal to the value
                        of OBR.3.1 (Entity Identifier).][The value of ORC.3.2 (Namespace ID) SHALL be equal to the value
                        of OBR.3.2 (Namespace ID).][The value of ORC.3.3 (Universal ID) SHALL be equal to the value of
                        OBR.3.3 (Universal ID).][The value of ORC.3.4 (Universal ID Type) SHALL be equal to the value of
                        OBR.3.4 (Universal ID Type).]]
                    </Description>
                    <Assertion>
                        <OR>
                            <FORALL>
                                <NOT>
                                    <Presence Path="1[1].3[1].1[1]"/>
                                </NOT>
                                <NOT>
                                    <Presence Path="1[1].3[1].2[1]"/>
                                </NOT>
                                <NOT>
                                    <Presence Path="1[1].3[1].3[1]"/>
                                </NOT>
                                <NOT>
                                    <Presence Path="1[1].3[1].4[1]"/>
                                </NOT>
                            </FORALL>
                            <FORALL>
                                <PathValue Path1="1[1].3[1].1[1]" Operator="EQ" Path2="2[1].3[1].1[1]"/>
                                <PathValue Path1="1[1].3[1].2[1]" Operator="EQ" Path2="2[1].3[1].2[1]"/>
                                <PathValue Path1="1[1].3[1].3[1]" Operator="EQ" Path2="2[1].3[1].3[1]"/>
                                <PathValue Path1="1[1].3[1].4[1]" Operator="EQ" Path2="2[1].3[1].4[1]"/>
                            </FORALL>
                        </OR>
                    </Assertion>
                </Constraint>
                <Constraint ID="OBX-4 Presence">
                    <Description>If there are multiple OBX segments associated with the same OBR segment that have the
                        same OBX-3 (Observation Identifier) values for (OBX-3.1 (Identifier) + OBX-3.3 (Name of Coding
                        System)) or (OBX-3.4 (Alternate Identifier) + OBX-3.6 (Name of Alternate Coding System)), OBX-4
                        SHALL be present.
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.aphl.plugin.extra.OBX_4"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="5d7bf91a84ae59c6e0c89d51">
                <Constraint ID="ELR-027">
                    <Description>If PID-7 (Date/Time of Birth) is not valued, then an OBX segment associated with the
                        SPM segment SHALL be present to report patient age at specimen collection.
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_027"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="5d7bf91a84ae59c6e0c89d48">
                <Constraint ID="ELR-048">
                    <Description>The value of OBX.1 (Set ID - OBX) SHALL be valued sequentially starting with the value
                        '1'.
                    </Description>
                    <Assertion>
                        <SetID Path="1[1].1[1]"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="5d7bf91a84ae59c6e0c89d3b"/>
        </Group>
        <Message>
            <ByID ID="5d531b726dc12fe0098bc4d6">
                <Constraint ID="ELR-040">
                    <Description>OBR-3 (Filler Order Number) SHALL NOT contain the same value as another occurrence of
                        OBR-3 (Filler Order Number) in the message.
                    </Description>
                    <Assertion>
                        <Plugin QualifiedClassName="gov.nist.hit.elr.plugin.cs.ELR_040"/>
                    </Assertion>
                </Constraint>
            </ByID>
        </Message>
    </Constraints>
</ConformanceContext>